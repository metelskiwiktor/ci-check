<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Line Length Check -->
    <module name="LineLength">
        <property name="fileExtensions" value="java"/>
        <property name="max" value="120"/>
        <property name="ignorePattern"
                  value="^package.*|^import.*|href\s*=\s*&quot;[^&quot;]*&quot;|http://|https://|ftp://"/>
    </module>

    <!-- Blank Lines After/Before Braces -->
    <module name="RegexpMultiline">
        <property name="format" value="\{\s*\r?\n\s*\r?\n"/>
        <property name="message" value="Unnecessary blank line after '{'"/>
        <property name="matchAcrossLines" value="true"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="\r?\n\s*\r?\n\s*\}"/>
        <property name="message" value="Unnecessary blank line before '}'"/>
        <property name="matchAcrossLines" value="true"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <module name="TreeWalker">
        <!-- System.out Usage -->
        <module name="RegexpSinglelineJava">
            <property name="id" value="SystemOutUsage"/>
            <property name="format" value="System\s*\.\s*out"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="System.out is forbidden. Use a logger instead."/>
        </module>

        <!-- System.err Usage -->
        <module name="RegexpSinglelineJava">
            <property name="id" value="SystemErrUsage"/>
            <property name="format" value="System\s*\.\s*err"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="System.err is forbidden. Use a logger instead."/>
        </module>

        <!-- Single Line Comments -->
        <module name="RegexpSinglelineJava">
            <property name="id" value="SingleLineComments"/>
            <property name="format" value="^\s*//(?!\s*CHECKSTYLE)"/>
            <property name="message" value="Single-line comments are forbidden. Use Javadoc instead."/>
            <property name="ignoreComments" value="false"/>
        </module>

        <!-- Suppress Single Line Comments in Tests -->
        <module name="SuppressionXpathSingleFilter">
            <property name="id" value="SingleLineComments"/>
            <property name="files" value=".*[\\/]src[\\/]test[\\/]java[\\/].*"/>
        </module>

        <!-- Unused Imports -->
        <module name="UnusedImports"/>

        <!-- Unused Local Variables -->
        <module name="UnusedLocalVariable"/>

        <!-- Need Braces -->
        <module name="NeedBraces">
            <property name="tokens" value="LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_IF, LITERAL_WHILE"/>
        </module>

        <!-- Generic Whitespace -->
        <module name="GenericWhitespace">
            <message key="ws.followed" value="GenericWhitespace ''{0}'' is followed by whitespace."/>
            <message key="ws.preceded" value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
            <message key="ws.illegalFollow" value="GenericWhitespace ''{0}'' should followed by whitespace."/>
            <message key="ws.notPreceded" value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>

        <!-- Indentation -->
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="4"/>
            <property name="tabWidth" value="4"/>
            <property name="forceStrictCondition" value="false"/>
        </module>

        <!-- No Whitespace Before -->
        <module name="NoWhitespaceBefore">
            <property name="tokens" value="COMMA, SEMI, POST_INC, POST_DEC, DOT, LABELED_STAT, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>

        <!-- Whitespace Around -->
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true"/>
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyTypes" value="true"/>
            <property name="allowEmptyLoops" value="true"/>
            <property name="allowEmptySwitchBlockStatements" value="true"/>
            <property name="ignoreEnhancedForColon" value="false"/>
            <property name="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR,
                    BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND,
                    LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY,
                    LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED,
                    LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN,
                    NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
                    SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT,
                    TYPE_EXTENSION_AND, LITERAL_WHEN"/>
            <message key="ws.notFollowed"
                     value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks
               may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
            <message key="ws.notPreceded"
                     value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>

        <!-- Empty Line Separator -->
        <module name="EmptyLineSeparator">
            <property name="tokens"
                      value="PACKAGE_DEF, IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
         STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, RECORD_DEF,
         COMPACT_CTOR_DEF"/>
            <property name="allowNoEmptyLineBetweenFields" value="false"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
        </module>

        <!-- Type Name -->
        <module name="TypeName">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF, RECORD_DEF"/>
            <message key="name.invalidPattern" value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- Method Name -->
        <module name="MethodName">
            <property name="id" value="MethodName"/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern" value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- Suppress Method Name in Tests -->
        <module name="SuppressionXpathSingleFilter">
            <property name="id" value="MethodName"/>
            <property name="files" value=".*[\\/]src[\\/]test[\\/]java[\\/].*"/>
        </module>

        <!-- Local Variable Name -->
        <module name="LocalVariableName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
            <message key="name.invalidPattern" value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>

        <!-- Constant Name -->
        <module name="ConstantName">
            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <message key="name.invalidPattern" value="Constant name ''{0}'' must match pattern ''{1}''."/>
        </module>
    </module>
</module>